name: Build and Package Wails Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Install Dependencies
        run: |
          brew install gtk+3

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
  
      - name: Build Wails application
        run: |
          wails build
          # List contents of build directory to verify output
          ls -la build/bin

      - name: Create macOS DMG
        if: runner.os == 'macOS'
        run: |
          # Install create-dmg
          npm install -g create-dmg

          # Create DMG installer
          create-dmg 'build/bin/my-desktop-app.app' 'build/bin/my-desktop-app.dmg' --overwrite

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v3
        with:
          name: macOS-installer
          path: ./build/macos/my-desktop-app.dmg

  build-windows:
    runs-on: windows-latest
    needs: build-macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Wails application
        run: wails build

      - name: Create Windows Installer
        run: |
          # Assuming you have Inno Setup or NSIS installed
          # For example, using Inno Setup:
          InnoSetupCompiler /COMPONENTS "all" /CONFIG "installer.iss"

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: ./build/windows/my-desktop-app.exe
